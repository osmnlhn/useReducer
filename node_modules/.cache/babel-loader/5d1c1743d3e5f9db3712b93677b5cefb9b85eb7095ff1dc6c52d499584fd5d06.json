{"ast":null,"code":"var _jsxFileName = \"/Users/osmanilhan/Downloads/useReducer/src/Counter.js\",\n  _s = $RefreshSig$();\nimport react, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\nconst reducer = (state, action) => {\n  if (!action) return state;\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n    case \"increment_by\":\n      return {\n        count: state.count + action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default function Counter() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"count\",\n      children: [\"Count:\", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\"\n      }),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\"\n      }),\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["react","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","count","reducer","state","action","type","payload","Counter","_s","dispatch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/osmanilhan/Downloads/useReducer/src/Counter.js"],"sourcesContent":["import react, { useReducer } from \"react\";\n\nconst initialState = {\n  count: 0,\n};\n\nconst reducer = (state, action) => {\n  if (!action) return state;\n\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n\n    case \"decrement\":\n      return { count: state.count - 1 };\n\n    case \"increment_by\":\n      return { count: state.count + action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default function Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <div className=\"count\">Count:{state.count}</div>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+1</button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-1</button>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,IAAI,CAACA,MAAM,EAAE,OAAOD,KAAK;EAEzB,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAEJ,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAEnC,KAAK,WAAW;MACd,OAAO;QAAEA,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAEnC,KAAK,cAAc;MACjB,OAAO;QAAEA,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;MAAQ,CAAC;IAEhD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAe,SAASI,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGd,UAAU,CAACO,OAAO,EAAEF,YAAY,CAAC;EAC3D,oBACEH,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAD,QAAA,GAAC,QAAM,EAACP,KAAK,CAACF,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnElB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACnE,CAAC;AAEP;AAACP,EAAA,CATuBD,OAAO;AAAAU,EAAA,GAAPV,OAAO;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}